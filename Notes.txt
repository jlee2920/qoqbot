
-------------------------------------------------------
Notes on PhantomBot
-------------------------------------------------------

IMPORTANT LINKS:

Features:
https://phantombot.tv/features/

GitHub Link:
https://github.com/PhantomBot/PhantomBot

Installation Guide:
https://community.phantombot.tv/t/windows-setup-guide/60
https://community.phantombot.tv/t/macos-setup-guide/63

Discord Integration:
https://community.phantombot.tv/t/discord-integration-setup/64

- Note: In order to fully connect PhantomBot into discord, you need to add the bot to the server and
        grab the token from the new bot created. Then you place this token inside the config file
        located at /config/botlogin.txt

Connecting with Twitch:
https://phantombot.tv/oauth/

- Note: Java 8 is required, Java 9 is NOT SUPPORTED

Writing your own script:
https://community.phantombot.tv/t/how-to-make-your-own-script/1112

Discord Command Variables:
https://community.phantombot.tv/t/discord-command-variables/55

NOTES:
    - It all runs locally, and the can records chat logs from the stream (possibly extend to send to discord)
    - Opensource so we can look at the specific JSON response from the twitch server
        - We can potentially leverage this to allow qoqbot to send a specific message to discord


Running logs:
Welcome to the PhantomBot setup process!
If you have any issues please report them on our forum or Tweet at us!
Forum: https://community.phantombot.tv/
Twitter: https://twitter.com/phantombotapp/
PhantomBot Knowledgebase: https://docs.phantombot.tv/


1. Please enter the bot's Twitch username: ______

2. You will now need a OAuth token for the bot to be able to chat.
Please note, this OAuth token needs to be generated while you're logged in into the bot's Twitch account.
If you're not logged in as the bot, please go to https://twitch.tv/ and login as the bot.
Get the bot's OAuth token here: https://twitchapps.com/tmi/
Please enter the bot's OAuth token: oauth: ______

3. You will now need your channel OAuth token for the bot to be able to change your title and game.
Please note, this OAuth token needs to be generated while you're logged in into your caster account.
If you're not logged in as the caster, please go to https://twitch.tv/ and login as the caster.
Get the your OAuth token here: https://phantombot.tv/oauth/
Please enter your OAuth token: ______

4. Please enter the name of the Twitch channel the bot should join: ______

5. Please enter a custom username for the web panel: ______

6. Please enter a custom password for the web panel: ______

PhantomBot will launch in 5 seconds.
If you're hosting the bot locally you can access the panel here: http://localhost:25000/panel
If you're running the bot on a server, make sure to open the following ports:
25000, 25003, and 25004. You can change 'localhost' to your server ip to access the panel.

There is a database file in PhantomBot and can be converted to a MySQL database
https://community.phantombot.tv/t/mysql-configuration/73

NOTE:
    - There exists a log file located at /Phantom/logs/chat/*.txt .. maybe we can write a script that
    kills all files except the latest file, and read it to scan for a songrequest command. If this can,
    we can then attempt to write that message out to the bot to write into discord or manually
    write it to discord.
    - we can tail a file and grep for a specific command
    - discord follow a RESTful interface
        https://discordapp.com/developers/docs/resources/channel#create-message
    

Thought:
THIS WOULD HAVE TO BE AFTER WE FIGURE OUT HOW TO PROPERLY ALLOW QOQBOT TO MAKE A REQUEST TO RHYTHMBOT.
What if we are able to change the source of qoqbot to send a RESTful call to our local server instead of having this local server
polling and reading from a log file. This would definitely be a more robust solution that wouldn't require the date or a local 
implementation for the log file. This would also allow us to extend this to an external server that could do the needful that regular
!sr does in nightbot. This is a difficult thing to measure since these are all specluations and on the premise that we can do a build
of the new bot which I'm assuming is docker based. If this is docker based, building is very simple; if not, then this might not be 
realistically possible. -- If this is not possible, we have no choice but to read the log file. This still doesn't solve our issue
of only allowing regualrs to make requests or the same person making more than a specific number of requests. 


NEW DISCOVERY:
Posting to the discord through cURL does not trigger any API calls for GET or POST in our client. We have discovered that in order
for the music bot to pick something up, it has to be a post to messages through the client. There are a couple of things we can do.
1. Be able to POST in our Discord client somehow through the bot - the bot talks directly to the client instead of posting to the
server and the client pulls.
2. Be able to take to the music bot directly through an API and trigger it's music capabilites. 

I will dive more indepth into 2.